# Use a base image with Rust and necessary tools
FROM rust:latest as builder

# Set the working directory
WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y \
    cmake \
    git \
    libssl-dev \
    libpq-dev   # Install PostgreSQL development libraries

# Clone the Vaultwarden source code
RUN git clone https://github.com/dani-garcia/vaultwarden.git .

# Build Vaultwarden with PostgreSQL as the database backend
RUN cargo build --release --features sqlite

# Create a smaller final image
FROM debian:bullseye-slim

# Set environment variables
ENV ROCKET_PROFILE="release" \
    ROCKET_ADDRESS=0.0.0.0 \
    ROCKET_PORT=8080 \
    WEBSOCKET_ADDRESS=0.0.0.0 \
    WEBSOCKET_PORT=3012 \
    SSL_CERT_DIR=/etc/ssl/certs \
    EMERGENCY_ACCESS_ALLOWED=true \
    EXTENDED_LOGGING=false \
    ICON_SERVICE=google \
    IP_HEADER=X-Forwarded-For \
    LOG_LEVEL=Info \
    ORG_CREATION_USERS=all \
    ORG_EVENTS_ENABLED=false \
    ORG_GROUPS_ENABLED=false \
    RELOAD_TEMPLATES=false \
    ROCKET_WORKERS=100 \
    SENDS_ALLOWED=true \
    SHOW_PASSWORD_HINT=false \
    SIGNUPS_ALLOWED=false \
    SIGNUPS_VERIFY=false \
    USE_SYSLOG=false \
    WEBSOCKET_ENABLED=true \
    WEB_VAULT_ENABLED=true \
    DOMAIN=https://north.martinatortime.us.to \
    DOMAIN_NAME=north.martinatortime.us.to

# Install runtime dependencies
RUN apt-get update && \
    apt-get install -y sqlite3 libpq5 git wget curl tar lsof jq gpg ca-certificates openssl tmux && \
    rm -rf /var/lib/apt/lists/*

# Copy the built binary from the builder stage
COPY --from=builder /app/target/release/vaultwarden /usr/local/bin/vaultwarden

# Copy other files
COPY config/crontab .
COPY config/Procfile .
COPY config/Caddyfile /etc/caddy/Caddyfile
COPY packages/caddy /usr/local/bin/caddy
COPY packages/overmind /usr/local/bin/overmind
COPY packages/supercronic /usr/local/bin/supercronic
COPY scripts/restore.sh /restore.sh
COPY scripts/backup-data-north.sh /backup-data.sh
COPY scripts/start.sh /start.sh

# Chmod the scripts
RUN chmod +x /start.sh
RUN chmod +x /restore.sh
RUN chmod +x /backup-data.sh
RUN chmod +x /usr/local/bin/caddy
RUN chmod +x /usr/local/bin/supercronic
RUN chmod +x /usr/local/bin/overmind

# Start Vaultwarden
CMD ["overmind", "start"]
