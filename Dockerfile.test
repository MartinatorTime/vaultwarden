# Use the Rust image for building Vaultwarden
FROM rust:latest AS builder

# Set the working directory
WORKDIR /app

# Clone the Vaultwarden source code from GitHub
RUN git clone https://github.com/dani-garcia/vaultwarden.git .

# Build Vaultwarden
RUN cargo build --release --features sqlite

# Create a new stage for the final image
FROM vaultwarden/server:latest AS vaultwarden

# Set environment variables
ENV ROCKET_PROFILE="release" \
    ROCKET_ADDRESS=0.0.0.0 \
    ROCKET_PORT=8080 \
    WEBSOCKET_ADDRESS=0.0.0.0 \
    WEBSOCKET_PORT=3012 \
    SSL_CERT_DIR=/etc/ssl/certs \
    EMERGENCY_ACCESS_ALLOWED=true \
    EXTENDED_LOGGING=false \
    ICON_SERVICE=google \
    IP_HEADER=X-Forwarded-For \
    LOG_LEVEL=Info \
    ORG_CREATION_USERS=all \
    ORG_EVENTS_ENABLED=false \
    ORG_GROUPS_ENABLED=false \
    RELOAD_TEMPLATES=false \
    ROCKET_WORKERS=100 \
    SENDS_ALLOWED=true \
    SHOW_PASSWORD_HINT=false \
    SIGNUPS_ALLOWED=false \
    SIGNUPS_VERIFY=false \
    USE_SYSLOG=false \
    WEBSOCKET_ENABLED=true \
    WEB_VAULT_ENABLED=true \
    DOMAIN=https://north.martinatortime.us.to \
    DOMAIN_NAME=north.martinatortime.us.to

# Install runtime dependencies
RUN apt-get update && \
    apt-get install -y sqlite3 libpq5 git wget curl tar lsof jq gpg ca-certificates openssl tmux && \
    rm -rf /var/lib/apt/lists/*

# Download and extract Caddy
RUN wget -O caddy.tar.gz "https://github.com/caddyserver/caddy/releases/download/v2.7.5/caddy_2.7.5_linux_amd64.tar.gz" \
    && tar -xzf caddy.tar.gz -C /usr/local/bin/ caddy

# Download and extract Overmind
RUN wget -O overmind.gz "https://github.com/DarthSim/overmind/releases/download/v2.4.0/overmind-v2.4.0-linux-amd64.gz" \
    && gunzip overmind.gz \
    && chmod +x overmind \
    && mv overmind /usr/local/bin/

# Download and install SuperCronic for linux-arm64
RUN wget -O /usr/local/bin/supercronic "https://github.com/aptible/supercronic/releases/download/v0.2.27/supercronic-linux-amd64" \
    && chmod +x /usr/local/bin/supercronic

VOLUME /data

EXPOSE 80

WORKDIR /

COPY --from=vaultwarden /web-vault ./web-vault
COPY --from=vaultwarden /vaultwarden .

COPY --from=vaultwarden /healthcheck.sh .
COPY --from=vaultwarden /start.sh .

# Copy other files
COPY config/crontab .
COPY config/Procfile .
COPY config/Caddyfile /etc/caddy/Caddyfile

# Copy the built Vaultwarden binary from the builder stage
COPY --from=builder /app/target/release/vaultwarden /usr/local/bin/vaultwarden

# Copy other scripts
COPY scripts/restore.sh /restore.sh
COPY scripts/backup-data-north.sh /backup-data.sh

# Chmod the scripts and Vaultwarden binary
RUN chmod +x /usr/local/bin/vaultwarden
RUN chmod +x /restore.sh
RUN chmod +x /backup-data.sh

# Start Vaultwarden
CMD ["overmind", "start"]