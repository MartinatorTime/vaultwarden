name: Deploy to Fly

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - Dockerfile.fly
      - fly.toml
      - config/**
      - scripts/**
      
jobs:
  check-fly-secret:
    runs-on: ubuntu-latest
    outputs:
      fly-secret-exists: ${{ steps.fly-secret-check.outputs.defined }}
    steps:
      - name: Check for Fly secrets availability
        id: fly-secret-check
        # perform secret check & put boolean result as an output
        shell: bash
        run: |
          if [ "${{ secrets.FLY_API_TOKEN }}" != '' ] && [ "${{ secrets.FLY_APP }}" != '' ]; then
            echo "defined=true" >> $GITHUB_OUTPUT;
          else
            echo "defined=false" >> $GITHUB_OUTPUT;
          fi

  deploy:
    name: Deploy app
    runs-on: ubuntu-latest
    needs: [check-fly-secret]
    if: needs.check-fly-secret.outputs.fly-secret-exists == 'true'
    steps:
      - uses: superfly/flyctl-actions/setup-flyctl@master
        with:
          version: 0.1.112
      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          # renovate: datasource=github-releases depName=go-task/task
          version: 3.27.1
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Rewrite secrets
        run: |
          #Remove previous secrets
          #flyctl secrets unset DATABASE_URL PUSH_INSTALLATION_ID PUSH_INSTALLATION_KEY PASS GITHUB_TOKEN
          #Set New Secrets
          flyctl secrets set DATABASE_URL="${{ secrets.DATABASE }}" --stage
          flyctl secrets set PUSH_INSTALLATION_ID="${{ secrets.PUSH_INSTALLATION_ID }}" --stage
          flyctl secrets set PUSH_INSTALLATION_KEY="${{ secrets.PUSH_INSTALLATION_KEY }}" --stage
          flyctl secrets set PASS="${{ secrets.PASS }}" --stage
          flyctl secrets set GITHUB_TOKEN="${{ secrets.TOKEN }}" --stage
        env:
          FLY_APP: ${{ secrets.FLY_APP }}
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@master

          
      - name: Deploy app
        run: |
          flyctl deploy --now -a $FLY_APP
        env:
          FLY_APP: ${{ secrets.FLY_APP }}
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}